import pytest
import math

from lib import *
from util import *
import constants

def test_week3():
  print_sep("Motif Enumeration Bruteforce")

  assert(
    sorted(motif_enumerate_bruteforce(['ATTTGGC','TGCCTTA','CGGTATC', 'GAAAATT'],k=3,d=1)) ==
    ['ATA','ATT','GTT','TTT']
  )

  print_iter(sorted(motif_enumerate_bruteforce(
    ['TTCAGACCATTAATACAGGGCGCCA','GTTGAACTGACAACATGTTCGACTA','GACCGTGCCGCAAAAGGGGGTCCTG','ATTCCTAATAAGCCTCAAGAGCGAA','GAAAATGCATTTTAATAAGAGGGCG','GGTTCATGAAAACATAAATATTACG'],
    k=5,d=2
  )))

  print_sep("Motif Matrix Entropy")

  motifs="""TCGGGGGTTTTT
  CCGGTGACTTAC
  ACGGGGATTTTC
  TTGGGGACTTTT
  AAGGGGACTTCC
  TTGGGGACTTCC
  TCGGGGATTCAT
  TCGGGGATTCCT
  TAGGGGAACTAC
  TCGGGTATAACC"""
  rows = [row.strip() for row in motifs.split('\n')]
  input_matrix = np.array([list(row) for row in rows])

  print("Scoring this matrix: ")
  print(input_matrix)
  print(
    score_motif_profile_entropy(
      profile_motif_matrix(input_matrix).values
    )
  )

  print_sep("Median String")

  input = (['AGCACTATAACGAGCTTGGCTATATGACAAGCGAGGGGGCTA',
            'TAAACCATACCGGCCCCATGCAATGTGGAGGCCGATAATGCC',
            'ATAATGCCATTTACGTTCGGGTGAGATCTGCACAAGATAGCG',
            'AGAAATTCAACGGTATCTCATTCACATGCGATATCGACGGGT',
            'CCCGACATCGCAAGGTCCAGTACACACAGTGAGGCGATAGCG',
            'GCACCTCTATGAATAGCGCAATTTTCACTATGTAATTAGCCG',
            'GATTACATAACGCCACTTTCGTCTCAGCGTAGCGCAAAGCTC',
            'AGCGACCGGATCTTCAGATCGAAATACAACATTCGCATAACG',
            'GGTCCGGCACAGATGAGCGCGTCACCCAGAATATCGCATCGT',
            'AGGTGTCAACCAATAGCGGCGAGTCCTTCCTCAAACAGGCCC'],6)
  print(median_strings(*input))

  print_sep("Profile-most probable k-mer")
  text = "CGTGTCGATTCTCTAGAGTATTAGGTTTGTATAGGCAAGGGTGGCGGGTAAATTGGAAGTCACTTCCTGGGACTATACGGCCGTCCGCGCTTTCAGCTACAAGTCATTTCCCCATGGCGATCGACCCCTTGATCGACAAGGCGTTAATACCAGTCTATCTGCTTACCTTTAATCAAAAGATCAATAACCACGGGGCTCAACCGCGAGTATGATATTATTATAACAATGCTCTGTGCAGAAAGGCTCTTAACGAGTCAAGCTGGGAGGTGCTTCCATCCGCAGGCCCTAAAAGGCCGTGTGTCAAGCGAATTTCCTGGTACCGGATATTACGAAGTAGACATACAGCTACGATATTAAGCCAAGCTGCTTCCAAAGCCTCCCCGCATATGCATCAATGCTTACACATCCGTACCACATCAACACTCCGCGGGCGCACCCGCAGGATGATCATATTCCTATACATGTTTATGAGCCAGTGCTGTTTTTTGGGCTCCTTCTCCGAATGTTCGGGATTTAGCGAAGGCGCGCACAGTCATACTTGCCTAAATGCCGAAATTGCTTATTGCAGATAACCGAAGCACCCGCTCCCTTGTCTCACCTAGAGGCGGCCCATCACCCCGATTAGACAATCATGCTACACTGCATTCAAGTATCGGTATCACGTATCACGCTTACGCTACGTAGTGACAAGCTTTGAGCAACGACTGTTTGTGGTCGAGGTGGCATCGCGGCACTTCTACGTCACAAGGTCTCCCTTCCCTAGCTTTATTGGGCATAGTAACGAATACCAATCGGGGACGTCTGTCATCTACACGGGGTATGGCACTGTCTGTCGTACACGGACACTGGCGTCAAACATTTAAGTCAAACAATATTGTAGCTGCCTTGCGAGCTCTTGAACCCCTTCAATCAATCCTCGGGAGCGCATTCGGTTTGACGCGGAATAGGGCTCATTACTAGAGATTGTAGTTAGCGCGGATGATATTCACTCATATCATAG"
  profile = profile_matrix_as_dataframe(np.array([
    [0.277,0.241,0.253,0.277,0.253,0.229,0.325,0.229,0.229,0.301,0.241,0.205],
    [0.181,0.241,0.313,0.229,0.241,0.277,0.253,0.205,0.229,0.337,0.229,0.241],
    [0.241,0.229,0.193,0.229,0.253,0.277,0.229,0.253,0.337,0.157,0.205,0.289],
    [0.301,0.289,0.241,0.265,0.253,0.217,0.193,0.313,0.205,0.205,0.325,0.265]]))
  k = 12
  print(f"Calculating most probable {k}-mer in {text} according to this matrix:\n{profile}")
  print(profile_most_probable_kmer(text, profile, k))

  print_sep("Greedy Motif Search")
  texts = ['AAGATTAAAATACTTTTTATTTCGCGGCCCAGATCTATTGACAATATATCTCAGAATTGCCGATATTCAGGTCGCTAACATGAAGGTGATAGAACAAAGACAACACAACGAACTACCTCTGTTCGTCGGACCCCAGTGATTCTTAGTCAGACCCGC','GTGAAAGTTGACGGTCAACCCCGCAATGCTTCTTTATGGTCGAGTCCCATAACTAAACATGGTGATAGAATACAAGTGAAATGCGGTCCGCGCGTTTCCTACGTAGGGGACGCCAACCATTGACTTTAAGAAGTATATACTCTGAGTAGATCCAGC','CATCGCGTAGCAGTGAGCTCGATAACTACTGTACGACATAGCTAGCTGCTCCTCTGCCGAGGTGAGGGAACCATCTAGTTGTTGCCCCCCAACTAAGGGGTAAAACCAATGTAAGCCTAAAGTCATTTATACCCATCACAAATGACATTCGGGCGG','CTGTCTTTCGGTTAGAACGGAGTACCGGGACATCACAGTGATATGCTACATGACCAAGATTGAAACAGATTGACAATCCTAAGTGTATATTTGGATGGTGATTGAAACTCGTAAGAGTACTACCTCCAAGTGTCTCCGGTTTTCCCCAACCGCTGG','CAGATCGTTAGGTTTGCCAGGAAGGTAGCGAACAATACTGGGGCGGGAGACAAAAATTGAGGCATTACGTAGACTGGACCCGTGGGTGAGCGAATGCCTTTTGCAAATATGGAGATGCGGGCAAAGAAACCATGGTTATATTGTTAAACATGGTAA','GGGCAAACCGCTCGTTGTCGTCTGGAGCATACGGGTGAGTGGCACTTTTCACTAAAACAGAATATGTGTGAGCCCTTTGAAGAGCTTCACGTCGTTCCAGCTTGTTTGGGTGAACGAATATTTCTAGGCGCAAGCACTCGAACATGGCATATAGCT','TGAGGTGAAGCGGGTGACGGAATCTAACCTACGATTGTCCGTGTTTTTATGGTTGAGCGATTTAGCATTCGGGCAAACTCGTAGACATCATGTCCACGCGGCAGTGAATGGAATCTAAACGGCCGGCGGACAGTTGTACGGATTCAACGTTTGTCA','TAGACTTTGTGCCCCTACATGAATGCTATGACTTATGTCCTAGATCCAAAGCTAGCTGGCGGTGATGGAAGCGCTTGTAAGGTCCAAATCCTTTTCACTTTGGATCTACCACCTCATCTGTCCACTCCCTAGAGGTTTCTTCATAGAACGGAACCA','TGGCTTAATATGGCCCGGTTGGTTGTAGTGTGGGGCGCTGCACCGACTCTGGAAGCTCGTTCTGATACAGCCTTTCCTTCGGCCGGACTAGCAACGCGAGTCTTTAATGGTGATGGAAACGGGTACAAAAGATTTCCCGGAATCCAACCCGTACTC','TTACACCAGTTGGGTGATGGAAGGGACGGGGCGCGGGGTCAGCAACAAGGTTGGACCTTATTGTTCTGATCCCTGGCTGTGTTTATTTCTATCGCGGGCCACCTGAGCTAAGAGTAAGGTTAATTTTATCGAAAGGCCAATCCGTTTCGGGTATGC','GGCAAGAGTGTCTACTTTGATCACACTCTCCGCCTTGAGTTGAATCCGAATCTATGAATTCGACCAATTTAAATTCAGGTGTTCCTAGACAGACGGCTTCCGGTTTGAGAATTTAGAGGGTGCAGATACAAATAGAATACGAGTGGTGACTGAACT','GGTGATGGAATTGAACTAGTCCGCATGTCGCCTTCCAGTTGCCAAGTGTCGCAGGACTGTTGCCCTACTCTAGTAGTGACCTCTTGAGCCAGTGCATTGACGATTGAACCCCAATAAATAAATAAGAGTATATGTGTGGTGGTCGAAGGATGGACT','TAGAAGGCATCTGGTGATAGAAGTCATCGGCCCGTCTGACCTCTTGATTACTGGAAGCGCCTTAGACAACTTTTTACGATATCACGCTTAGCGTATACCTCTCCGACGCCGTTTGATCTAAATTCCCAGACAAATCACACCTTCTCTTTAATCCGA','AGGTGTGTAGTAGAGTTCAAGCGTGGCGCGACACTCGGCAGCGCATCCAGTGTCTTGTCACGAGTGGGTGTAATCTACAGCCGCTCGAGATGGTGCGTACTGTAATAAGGTGATGGAAACCCACATTAATGATAAAGTATCGTTCATACATCGGAA','ATTCACCGTGTGTGGGCTCCGTACACGAACACGGCCTCCATCTTGTAAAAGGACCAGTCTCGCGGTGGGGTTGGTGAAGGAATACATCCGGGGGAGCTCCAGCTAGTACATTCGCGCTTTGAAAATCCGCGCCCTCATAGCAAGAAACATGCGTAG','GCTGTTCAGGTTTTATTTGAGTGGCTGGCGTGAGGCGGATTTTATTAACGTTGGCATAAGCAAACGATTGAAGCTCAGGATGACGCCTTCTTGAGAGGTGATCGAAGCACATGAACATTAATGCGGCGTCTCGTCGGGGGCTCTAAACAATCAATG','AGTAGGTCCTCTAACGCCTTCCTATGCGCTAAAGGGTTTTAGCTCCGAGGTGACAGAAGAAGCTTATGTTACGGGCAGCGCTATGACGTGGTATCTCGCTCCCTCAAAAACCACGCTCACCGCCTTGACTTGAAACTCCGGCTGACATTGTTCTAC','TAGTCGCAGAGGTTATCTATTTGTAGCGAGGCACCTAGGGCTGGACTTATCCGTTTTATCCCAGAACTAAACAGAGAGTTGGGCATCCCAGTGGCACTCCAGGGCAGGGGTGAGAGAAGGCGGTGCATGCGACTGGGCAGCAGCCTTTCGTTCCGA','GATGAATAAGAACCCTTGTAGTAGCTTTGTTGACATCGCTGGGCAACTGGTGACAGAAATGCAACAACCTTCTCTAGGCTTACGGGTGGTGTCGAGCATCCTTCCAAGGGGAGTGACGTTTCCCCATGTGGCGGGTTCATCAGCACCGGAACGATC','ATTGTCTTGAGAGGTGACTGAAGATCCGGGTCGGGTGGGCTGCCGGTACCCAATAGATCAATCACTTGGATCGTATTCGACGAGAGCCGGCGGATACATTTCTCGGTACCCCAAGGTCTTACGATACAGGCTACTGTCCCCTCATCGTAATGAGGC','ATTTCATTTGAAGTCAGTTGAGTGCATTAAAACCAGGAGTGTGGCGAGCGTAAACGTGTTCGCGCTAACATAAAACTTCACATAGAACCCTCACTTTAATGCACGCGAGGTGACCGAAAATCACAACTATATTCGACTGGGCGGTACTCCTGTCTC','GTTGGTCCGCGTATTTTTAGGGGGGCCCTAACAGCTCGGTGCATCCAAGTAAAAATTCCGCTGAGAGCTTATTCACACGCGGCTCTTCTGTCGGGTAACCTATTTAATGGGCTGATAAAAGGTGACGGAAAAAGTGCCCTAGGTACAAGGAAGTCA','GGTGAGGGAAAGTTACAAATCCTGTTTACGAGGCGTTCGCGAAGTCGGCTATGCCAACAAGATCGAAGCACCCAGGTAGCATCCACAACTATGAGAATACTGTGTGCTGCACATGCCACTTCGTTTTGGAAAAATCCCAGTTGACCCAACGGCAGT','CCCCTTCAGCCTCAATTGCGTACGAATCAGTGTTCTGTTTTAGTAAGCCACGTCGTATGGATGCAGCATTTTACGTGGCAATCGTCACACTATGGACAGCTAGATTCTGGTGACAGAACCAGGTAATCCGGGCTGATGCGGCCTGCGTTATTGGCT','GTAAGAGTCATAGGTGACGGAATACGTCGATCTATTATCTTAATCTATCACTGGTAATGACAGGTTAAACTGTCATTTGGTAACGAGGCATGGTAGGTGTGGGAATGGTCCGCTTCCTTGAGGAGGCTAAATCTCAGGATCGGCTCCCACAAATCG']
  k = 12
  print_iter(greedy_motif_search(texts,k, pseudo_counts=False))

  print_sep("Greedy Motif Search with pseudo-counts (probabilities never 0)")
  texts = ['GATCTTGCCCTCAGCTTTTATAGGGTCCGGGAGTTCATTCTATCTAGGGATCCAAATAGCTCTCCAGATGTGAGCACGTAAGAGGCTCGTAGCTCTGATGCAGTACCCCCGCGGAGAGAAGGTGATGCGTAGCTTGGTAAGGTAGGCATCTAACGG','TGTCAGGGACGGTGGTCGGCGTCGAGGCCGAAACGTAGGGTTACTATCCTGCGTGCGCCCAGGACGTAAGCGGTCGCAGATTGGCAAGTAGTGGCACCTGTGAGGTATCAGAGAGTATACTCTATTTGTCGTCAGGCTATGGGGGGTGCCTATATA','GCGTGATCAATGGGGGCGAGAAGACTCCTCCCTCAGGCACAACTCGGTCAGCCCTTTACACTAAGATGCGTTAAACGCTAGCTAGCTGCGGAAAGGCGAACGCAAGGGTCGTCTATCCGCAGATAACTTGTGGTATTCCCGGCGCAGTGAAAAATC','TCGAACCGTGTCTTTCGCCCTGGTGGAACGTAAGGGCGACAGAATCACCGCATGGGCCTATGCTATCCATTAATTCGCATAACTTGCTCGAGGGGCCCAGACATCAGAAAAGTGTTGAGACTAAAACGCGCACTCCCACGCGATGCTCTAAGAATG','ATGCATCGCCAGTGCGTAGCATTTTCCAAGGTTTGTAGTGTGTTCTGCAAATGCGCGAAGTAACGACCGCGGGTCGGTGCGATTTCGTCCCGCCGCATGCGCGGAAGATGCGAATACACCGGCACGGAAGGGAGGAATCTGCCAAAACGAGCCCGC','CAACTCCTAGACCATGATCCGACTTTTCATGACCCGGGCACGCAACTTTCTGAGTTCTACGGTACGTAAGCGAACTTTTCACGACGCCCGCATCGGTTTGGCCGAGGGACAACGTGGTTAGGCCGTGGGGGAGGCAGTAAACTCGGACAGGGCAAC','GTGGCCGACGAGGTAATCTCCTCAACATTAATAACCAGGACGGAAGAGGAGCAGAGATGTGAGCGTGATGAGTCTGGGCTAGCTGGTAGATTCCTCCCGGACTGGCGCCTTCTTTAACCCTCACGCACCTTGGGTCATACCTATGTATAGCTTTTC','AAGACCAACTCAAACCAATTCAGACTACACATGAGAATCTGGCCTCTAGAGCTTTGATGTCGAACTAGGGAATGTATCTTACTCGTTTTGAGGTACGGTACGAAAGAGGTATTCATACCACATAAGTGATCTGGGCAAATCGGGGTGACCCGCCTC','GTATAATCTGTCATCCTAGCCTACTTTCATCCTGTTACCATAACGCTGGTGAGCACATTAAATACAACACACTAAAACAACTATGGAATTGGTGTGGGTTATTAACGAGGTCATTACCGGGGCACGTAAGGGGTACCGCTTTCGGTGGACGCTTGA','GGCAACGGGGTAAGCTATCCTACATTGTACTGAGAGCGCACGAAAGTGGTATGGGTATGCGACTCAGTGGGCGGCGCATCTCTATAAGTTTTGTTGTCAGGTCTATCACTAGATTGGGGATGAACCCCGTGACGGACTTTTGAACTTGTGCTCACG','AGCCGTCCTCGTCCATATCTGGACGTGCTTAGGATCATGCAACATGACAGGAGGAGAGCACGTACGTAAGTGAGACGAAAGGAATTAAGCGTAACGGGAACGTACTGGGCCGGGTGACAAGTTGTACCATGGCCCTTATCCGGTGCCAGAATGCAA','GGTACGCAAGAGCCCCTCCTTGATCCAGCAACCGACGCTGGATCATACTTCGGACTTAGTATCCGATGTCGATCAGGCTTGCGAGTAAGCACGGTGAGCTGGTTATGTGCGTTAGAATCTCGCCATACGAGATGCGTTAAACGTACTCCTTCTCGA','GGTTCACTTCATGAGGCTTTATCCCGGTAGGAAGAGTTTATAGTGGGTTTGTGCCGCAAGCAGTAGGACTCATTAGCGTTCAACAGTATGATAAGGTGGACGTAAGTGGTACGACAGCCCGGAGAGGTTCTAAAGGGCTTCCAAAAAAAATTATAT','CAGGCATCCTCTAGGCGCGACGCGTCTTAACCCGGCTAGCGCTGTCTTCCCAAAGCCTTATTTGCTAGCCCGGTTGAACGGGGTCGTAGATTTGACGCAATTAAAACAGGAACGAAAGAGCGCATTCGTACGTGGGCCGGTTCGTGTCGTGAATTG','AGTAATGTCGGGGGTACGTAAGGGTTACGATATTGTTCCATGCGCTTGCCATGTCCCCCAGAGGTTCTGCGGCGCCAAATAATGGGTTACGCGGGTGTAGGCTATAACTTCTTCCTGCGCTGGTGTAGGGAAATCTCACAAGCAATCGTTTTTACA','GCCCTTAGTCTTCGCACACAGAGCGCCCCAGACATGGATTCGTATATATATTTACCGGTGGCCGGGGGTGAGCGCTCTCCTAAAGCTCAAGGGGTTTTTGTTATTTAGTGCCGGCCGGCTCCTTGCGCTGCATGGACGGAAGGGGAGAATGTTCAA','GCGCCACCCAAATCAGGTATGTCAAGTACGGAAGTGCTTAGTGTTTAGCCTCTCTAGGCGGCTGATGGGTACTGCGGAGTCCCCGTACAGCAATATGCAATGACGCCGATATCTACTAGATTACTTTCATTCTCCTTTTCAAGAAAACGAGGCGGC','CTCCTGGTACACAGGACGTAAGGGCCCAGATAACCCACACAACTGAGGGATTATCGAAGACGATGATTCAGTCATTTTACATGGGGGCTTGGAAGATGTCGCGAATGATGGATACGCTCATGAGTTGATTGTGGATCGGCTTACAGCACTGACGTC','TGAAGGTGAGATTTATGCGTCTACACGGAGCGTGAGGCAGCTGCATCCTCACCCATGCCTAGGGCTAATACGAAGGTGGAAAGAGATTAGCGGTTTTAGCCGCGGTGCTGCATTTGCACTTGGGATGTATACACCTAACCGCCTCGCACGAAAGTG','GGACCCTCCGGGAGTCTCGGCGTACTCGAGTTTCGACCTCCTAGGTGATTCACTGGGTTAGGTTTACCGGGTACTCGCATCCCTTTACCCTACCCCACTAGTCGCCCGGGAACGTAAGAGGGACTGCTACTTAGCATTCTAGAAGGAGCCAAATTT','GTTGGCAGAGCGTGATGTCACTTAAGATCGGGCGTTGGACGCGGTTAGTGAACGTAAGTGCCTACCTGATAGCGGCGAGATCCACGTTGGCCTTTGATCGCCATGTTTACAGGCGCACGGTGCTCGCGATCTTGTAGGCAAATGCTTGGTAAGAGT','TTCATAAGATCCCACCCCACTCTTGTATAGTCCTCGCGGCCCCCCATACAGATACCCTTGTAGCCCTAATAAATGTTGGATCGAATAGACCAGCTAGCTATGGGTCAAGGTACGTAAGAGCTCAAGCCCTCAAGGTAATTCGCTATTCGGTCCTTC','ACTATACGTAGTACGATGATCGACCGGATCCTCACAGTCAACATTCCATGCACGCTAATCTCATCTTAGTTATGTACGTAAGCGGGTTGTCCTGTACCAATCGAGGCTCATAAATGTCATTATACACTCAACTTGTTTCTCGCGCAGTCCAATCCT','GGGACGAAAGAGTAAGACGAGCCCTAAGTTTGGGTACGGTCTGTGGTTAGACCAGATATGGCTCTTGTCAACAGAAGACATAAATTTTCAGTATGCCGCAGACGGCCTCGCATACCGTGCTCGCATTTCGAAGAAGGACTGCCCTATTAGAGTCCG','GGCTTATTCGTATGCGTAACTCAATAAGCCTGGAACGCAAGTAATGGTCGAACGGAAGCGAACACACAGAGTGTAATTGCCGTTCCCCACCCAAATTACTCAGCCGTAATAATCCGTGATGTCTGGGCTGCTTCCGCTATATTAGTTACCAAAATC']
  k = 12
  print_iter(greedy_motif_search(texts,k, pseudo_counts=True))

  print_sep("Quiz")

  motif_matrix = [
    "CTCGATGAGTAGGAAAGTAGTTTCACTGGGCGAACCACCCCGGCGCTAATCCTAGTGCCC",
    "GCAATCCTACCCGAGGCCACATATCAGTAGGAACTAGAACCACCACGGGTGGCTAGTTTC",
    "GGTGTTGAACCACGGGGTTAGTTTCATCTATTGTAGGAATCGGCTTCAAATCCTACACAG"
  ]
  print(f"Median strings: " + str(median_strings(motif_matrix, 7)))

  profile = np.array([
    [0.4,0.3,0.0,0.1,0.0,0.9], #A
    [0.2,0.3,0.0,0.4,0.0,0.1], #C
    [0.1,0.3,1.0,0.1,0.5,0.0], #G
    [0.3,0.1,0.0,0.4,0.5,0.0]]) #T 
  input = 'CAGTGA'
  rows = {'A': 0, 'C': 1, 'G': 2, 'T': 3}
  prob = 1
  for (i,char) in enumerate(input):
    mult = profile[rows[char],i]
    prob *= mult
  print(f"Probability of {input} given profile = {prob}")

if __name__ == '__main__':
  pytest.main(["-s", __file__]) #-s to not suppress prints